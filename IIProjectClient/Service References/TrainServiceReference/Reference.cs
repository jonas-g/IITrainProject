//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIProjectClient.TrainServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrainServiceReference.ITrainService")]
    public interface ITrainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetPassageInfo", ReplyAction="http://tempuri.org/ITrainService/GetPassageInfoResponse")]
        System.Xml.Linq.XElement GetPassageInfo(System.DateTime fromDate, System.DateTime toDate, string epcLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetPassageInfo", ReplyAction="http://tempuri.org/ITrainService/GetPassageInfoResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetPassageInfoAsync(System.DateTime fromDate, System.DateTime toDate, string epcLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/SaveToFile", ReplyAction="http://tempuri.org/ITrainService/SaveToFileResponse")]
        void SaveToFile(System.Xml.Linq.XElement value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/SaveToFile", ReplyAction="http://tempuri.org/ITrainService/SaveToFileResponse")]
        System.Threading.Tasks.Task SaveToFileAsync(System.Xml.Linq.XElement value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetEvents", ReplyAction="http://tempuri.org/ITrainService/GetEventsResponse")]
        System.Xml.Linq.XElement[] GetEvents(System.DateTime fromDate, System.DateTime toDate, string epcLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetEvents", ReplyAction="http://tempuri.org/ITrainService/GetEventsResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement[]> GetEventsAsync(System.DateTime fromDate, System.DateTime toDate, string epcLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetVehicle", ReplyAction="http://tempuri.org/ITrainService/GetVehicleResponse")]
        System.Xml.Linq.XElement GetVehicle(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetVehicle", ReplyAction="http://tempuri.org/ITrainService/GetVehicleResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetVehicleAsync(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetLocation", ReplyAction="http://tempuri.org/ITrainService/GetLocationResponse")]
        System.Xml.Linq.XElement GetLocation(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetLocation", ReplyAction="http://tempuri.org/ITrainService/GetLocationResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetLocationAsync(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetAllLocations", ReplyAction="http://tempuri.org/ITrainService/GetAllLocationsResponse")]
        System.Xml.Linq.XElement GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/GetAllLocations", ReplyAction="http://tempuri.org/ITrainService/GetAllLocationsResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetAllLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/toDateTimeFormat", ReplyAction="http://tempuri.org/ITrainService/toDateTimeFormatResponse")]
        string[] toDateTimeFormat(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainService/toDateTimeFormat", ReplyAction="http://tempuri.org/ITrainService/toDateTimeFormatResponse")]
        System.Threading.Tasks.Task<string[]> toDateTimeFormatAsync(string input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrainServiceChannel : IIProjectClient.TrainServiceReference.ITrainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrainServiceClient : System.ServiceModel.ClientBase<IIProjectClient.TrainServiceReference.ITrainService>, IIProjectClient.TrainServiceReference.ITrainService {
        
        public TrainServiceClient() {
        }
        
        public TrainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.Linq.XElement GetPassageInfo(System.DateTime fromDate, System.DateTime toDate, string epcLocation) {
            return base.Channel.GetPassageInfo(fromDate, toDate, epcLocation);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetPassageInfoAsync(System.DateTime fromDate, System.DateTime toDate, string epcLocation) {
            return base.Channel.GetPassageInfoAsync(fromDate, toDate, epcLocation);
        }
        
        public void SaveToFile(System.Xml.Linq.XElement value) {
            base.Channel.SaveToFile(value);
        }
        
        public System.Threading.Tasks.Task SaveToFileAsync(System.Xml.Linq.XElement value) {
            return base.Channel.SaveToFileAsync(value);
        }
        
        public System.Xml.Linq.XElement[] GetEvents(System.DateTime fromDate, System.DateTime toDate, string epcLocation) {
            return base.Channel.GetEvents(fromDate, toDate, epcLocation);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement[]> GetEventsAsync(System.DateTime fromDate, System.DateTime toDate, string epcLocation) {
            return base.Channel.GetEventsAsync(fromDate, toDate, epcLocation);
        }
        
        public System.Xml.Linq.XElement GetVehicle(string epc) {
            return base.Channel.GetVehicle(epc);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetVehicleAsync(string epc) {
            return base.Channel.GetVehicleAsync(epc);
        }
        
        public System.Xml.Linq.XElement GetLocation(string epc) {
            return base.Channel.GetLocation(epc);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetLocationAsync(string epc) {
            return base.Channel.GetLocationAsync(epc);
        }
        
        public System.Xml.Linq.XElement GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetAllLocationsAsync() {
            return base.Channel.GetAllLocationsAsync();
        }
        
        public string[] toDateTimeFormat(string input) {
            return base.Channel.toDateTimeFormat(input);
        }
        
        public System.Threading.Tasks.Task<string[]> toDateTimeFormatAsync(string input) {
            return base.Channel.toDateTimeFormatAsync(input);
        }
    }
}
